// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/bgadrian/pseudoservice/models"
)

// GetCustomCountOKCode is the HTTP code returned for type GetCustomCountOK
const GetCustomCountOKCode int = 200

/*GetCustomCountOK The results were successfully generated

swagger:response getCustomCountOK
*/
type GetCustomCountOK struct {

	/*
	  In: Body
	*/
	Payload *models.CustomResponseModel `json:"body,omitempty"`
}

// NewGetCustomCountOK creates GetCustomCountOK with default headers values
func NewGetCustomCountOK() *GetCustomCountOK {

	return &GetCustomCountOK{}
}

// WithPayload adds the payload to the get custom count o k response
func (o *GetCustomCountOK) WithPayload(payload *models.CustomResponseModel) *GetCustomCountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get custom count o k response
func (o *GetCustomCountOK) SetPayload(payload *models.CustomResponseModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCustomCountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetCustomCountDefault Error occurred

swagger:response getCustomCountDefault
*/
type GetCustomCountDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewGetCustomCountDefault creates GetCustomCountDefault with default headers values
func NewGetCustomCountDefault(code int) *GetCustomCountDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCustomCountDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get custom count default response
func (o *GetCustomCountDefault) WithStatusCode(code int) *GetCustomCountDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get custom count default response
func (o *GetCustomCountDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get custom count default response
func (o *GetCustomCountDefault) WithPayload(payload *models.ErrorModel) *GetCustomCountDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get custom count default response
func (o *GetCustomCountDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCustomCountDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
